const todoValue = document.getElementById("todo-text");  
const todoAlert = document.getElementById("alert");  
const todoItem = document.getElementById("list-item");  

let todo = JSON.parse(localStorage.getItem("todo-list"));  
if (!todo) {  
    todo = [];  
}  

// Fungsi untuk mengatur pesan alert  
function setAlertMessage(message) {  
    todoAlert.innerText = message;  
    // Menghapus pesan setelah 5 detik  
    setTimeout(() => {  
        todoAlert.innerText = "";  
    }, 5000);  
}  

// Fungsi untuk menambahkan item todo  
function CreateToDoItems() {  
    if (todoValue.value.trim() === "") {  
        setAlertMessage("Please enter your todo text!");  
        todoValue.focus();  
        return; // Keluar dari fungsi jika input kosong  
    }  

    // Cek apakah item sudah ada  
    let IsPresent = todo.some(element => element.item === todoValue.value.trim());  

    if (IsPresent) {  
        setAlertMessage("This item is already present in the list!");  
        return;  
    }  

    // Membuat elemen list item baru  
    let li = document.createElement("li");  
    const todoItems = `<div title="Hit Double Click and Complete" ondblclick="CompletedToDoItems(this)">${todoValue.value.trim()}</div>  
                       <div>  
                          <img class="edit todo-controls" onclick="UpdateToDoItems(this)" src="assets/pen.png" />  
                          <img class="delete todo-controls" onclick="DeleteToDoItems(this)" src="assets/trash.png" />  
                       </div>`;  
    li.innerHTML = todoItems;  
    todoItem.appendChild(li);  

    // Menambahkan item ke array todo  
    let itemList = { item: todoValue.value.trim(), status: false };  
    todo.push(itemList);  

    // Reset input dan tampilkan pesan sukses  
    todoValue.value = "";  
    setAlertMessage("Todo item Created Successfully!");  
    setLocalStorage();  
}  

// Fungsi untuk mengupdate item todo  
// function UpdateToDoItems(e) {  
//     const itemDiv = e.parentElement.parentElement.querySelector("div");  
//     todoValue.value = itemDiv.innerText;  
//     updateText = itemDiv;  
//     addUpdate.setAttribute("onclick", "UpdateOnSelectionItems()");  
//     addUpdate.setAttribute("src", "assets/icon add.png"); // Ganti ikon  
//     todoValue.focus();  
// }  

// Fungsi untuk menyimpan perubahan setelah edit  
let updateText; // Pastikan ini dideklarasikan secara global jika diperlukan  

function UpdateToDoItems(e) {  
    const itemDiv = e.parentElement.parentElement.querySelector("div");  
    
    if (itemDiv.style.textDecoration === "") { // Pastikan ini sesuai dengan kondisi yang Anda inginkan  
        todoValue.value = itemDiv.innerText;  
        updateText = itemDiv; // Simpan referensi untuk digunakan saat memperbarui  
        addUpdate.setAttribute("onclick", "UpdateOnSelectionItems()");  
        addUpdate.setAttribute("src", "/images/refresh.png");  
        todoValue.focus();  
    }  
}  

function UpdateOnSelectionItems() {  
    let IsPresent = todo.some(element => element.item === todoValue.value.trim());  

    if (IsPresent) {  
        setAlertMessage("This item is already present in the list!");  
        return;  
    }  

    todo.forEach(element => {  
        if (element.item === updateText.innerText.trim()) {  
            element.item = todoValue.value.trim(); // Memperbarui nilai item  
        }  
    });  

    setLocalStorage();  

    updateText.innerText = todoValue.value.trim(); // Memperbarui tampilan  
    addUpdate.setAttribute("onclick", "CreateToDoItems()");  
    addUpdate.setAttribute("src", "/images/plus.png"); // Kembali ke ikon tambah  
    todoValue.value = ""; // Reset input  
    setAlertMessage("Todo item Updated Successfully!");  
}

// Fungsi untuk menghapus item todo  
function DeleteToDoItems(e) {  
    const itemDiv = e.parentElement.parentElement.querySelector("div").innerText;  
    todo = todo.filter(element => element.item !== itemDiv);  
    setLocalStorage();  
    e.parentElement.parentElement.remove();  
    setAlertMessage("Todo item Deleted Successfully!");  
}  

// Fungsi untuk menyimpan ke localStorage  
function setLocalStorage() {  
    localStorage.setItem("todo-list", JSON.stringify(todo));  
}